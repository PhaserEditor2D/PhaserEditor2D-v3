{
  "Phaser.Loader.LoaderPlugin.atlas(atlasURL)": "The absolute or relative URL to load the texture atlas json data file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\". Or, a well formed JSON object.",
  "Phaser.Loader.LoaderPlugin.atlas(textureURL)": "The absolute or relative URL to load the texture image file from. If undefined or `null` it will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".",
  "Phaser.Types.Loader.FileTypes.AtlasJSONFileConfig.normalMap": "The filename of an associated normal map. It uses the same path and url to load as the texture image.",
  "Phaser.Loader.LoaderPlugin.atlasXML(atlasURL)": "The absolute or relative URL to load the texture atlas xml data file from. If undefined or `null` it will be set to `<key>.xml`, i.e. if `key` was \"alien\" then the URL will be \"alien.xml\".",
  "Phaser.Loader.LoaderPlugin.atlasXML(textureURL)": "The absolute or relative URL to load the texture image file from. If undefined or `null` it will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".",
  "Phaser.Types.Loader.FileTypes.AtlasXMLFileConfig.normalMap": "The filename of an associated normal map. It uses the same path and url to load as the texture image.",
  "Phaser.Loader.LoaderPlugin.audio(urls)": "The absolute or relative URL to load the audio files from.",
  "Phaser.Loader.LoaderPlugin.audioSprite(jsonURL)": "The absolute or relative URL to load the json file from. Or a well formed JSON object to use instead.",
  "Phaser.Loader.LoaderPlugin.audioSprite(audioURL)": "The absolute or relative URL to load the audio file from. If empty it will be obtained by parsing the JSON file.",
  "Phaser.Loader.LoaderPlugin.bitmapFont(fontDataURL)": "The absolute or relative URL to load the font xml data file from. If undefined or `null` it will be set to `<key>.xml`, i.e. if `key` was \"alien\" then the URL will be \"alien.xml\".",
  "Phaser.Loader.LoaderPlugin.bitmapFont(textureURL)": "The absolute or relative URL to load the font image file from. If undefined or `null` it will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".",
  "Phaser.Types.Loader.FileTypes.BitmapFontFileConfig.normalMap": "The filename of an associated normal map. It uses the same path and url to load as the texture image.",
  "Phaser.Loader.LoaderPlugin.htmlTexture(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.html`, i.e. if `key` was \"alien\" then the URL will be \"alien.html\".",
  "Phaser.Loader.LoaderPlugin.htmlTexture(width)": "The width of the texture the HTML will be rendered to.",
  "Phaser.Loader.LoaderPlugin.htmlTexture(height)": "The height of the texture the HTML will be rendered to.",
  "Phaser.Loader.LoaderPlugin.image(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".",
  "Phaser.Types.Loader.FileTypes.ImageFileConfig.normalMap": "The filename of an associated normal map. It uses the same path and url to load as the image.",
  "Phaser.Loader.LoaderPlugin.multiatlas(atlasURL)": "The absolute or relative URL to load the texture atlas json data file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".",
  "Phaser.Loader.LoaderPlugin.multiatlas(path)": "Optional path to use when loading the textures defined in the atlas data.",
  "Phaser.Loader.LoaderPlugin.plugin(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.js`, i.e. if `key` was \"alien\" then the URL will be \"alien.js\". Or, a plugin function.",
  "Phaser.Loader.LoaderPlugin.plugin(start)": "Automatically start the plugin after loading?",
  "Phaser.Loader.LoaderPlugin.plugin(mapping)": "If this plugin is to be injected into the Scene, this is the property key used.",
  "Phaser.Loader.LoaderPlugin.scenePlugin(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.js`, i.e. if `key` was \"alien\" then the URL will be \"alien.js\". Or, set to a plugin function.",
  "Phaser.Loader.LoaderPlugin.scenePlugin(systemKey)": "If this plugin is to be added to Scene.Systems, this is the property key for it.",
  "Phaser.Loader.LoaderPlugin.scenePlugin(sceneKey)": "If this plugin is to be added to the Scene, this is the property key for it.",
  "Phaser.Loader.LoaderPlugin.animation(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".",
  "Phaser.Loader.LoaderPlugin.sceneFile(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.js`, i.e. if `key` was \"alien\" then the URL will be \"alien.js\".",
  "Phaser.Loader.LoaderPlugin.script(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.js`, i.e. if `key` was \"alien\" then the URL will be \"alien.js\".",
  "Phaser.Loader.LoaderPlugin.text(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.txt`, i.e. if `key` was \"alien\" then the URL will be \"alien.txt\".",
  "Phaser.Loader.LoaderPlugin.glsl(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.glsl`, i.e. if `key` was \"alien\" then the URL will be \"alien.glsl\".",
  "Phaser.Loader.LoaderPlugin.html(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.html`, i.e. if `key` was \"alien\" then the URL will be \"alien.html\".",
  "Phaser.Loader.LoaderPlugin.json(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\". Or, can be a fully formed JSON Object.",
  "Phaser.Loader.LoaderPlugin.xml(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.xml`, i.e. if `key` was \"alien\" then the URL will be \"alien.xml\".",
  "Phaser.Types.Textures.SpriteSheetConfig.frameWidth": "The fixed width of each frame.",
  "Phaser.Types.Textures.SpriteSheetConfig.frameHeight": "The fixed height of each frame. If not set it will use the frameWidth as the height.",
  "Phaser.Types.Textures.SpriteSheetConfig.startFrame": "Skip a number of frames. Useful when there are multiple sprite sheets in one Texture.",
  "Phaser.Types.Textures.SpriteSheetConfig.endFrame": "The total number of frames to extract from the Sprite Sheet. The default value of -1 means \"extract all frames\".",
  "Phaser.Types.Textures.SpriteSheetConfig.margin": "If the frames have been drawn with a margin, specify the amount here.",
  "Phaser.Types.Textures.SpriteSheetConfig.spacing": "If the frames have been drawn with spacing between them, specify the amount here.",
  "Phaser.Loader.LoaderPlugin.spritesheet(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".",
  "Phaser.Loader.LoaderPlugin.svg(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.svg`, i.e. if `key` was \"alien\" then the URL will be \"alien.svg\".",
  "Phaser.Types.Loader.FileTypes.SVGSizeConfig.width": "An optional width. The SVG will be resized to this size before being rendered to a texture.",
  "Phaser.Types.Loader.FileTypes.SVGSizeConfig.height": "An optional height. The SVG will be resized to this size before being rendered to a texture.",
  "Phaser.Types.Loader.FileTypes.SVGSizeConfig.scale": "An optional scale. If given it overrides the width / height properties. The SVG is scaled by the scale factor before being rendered to a texture.",
  "Phaser.Loader.LoaderPlugin.tilemapCSV(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.csv`, i.e. if `key` was \"alien\" then the URL will be \"alien.csv\".",
  "Phaser.Loader.LoaderPlugin.tilemapImpact(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".",
  "Phaser.Loader.LoaderPlugin.tilemapTiledJSON(url)": "The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\". Or, a well formed JSON object.",
  "Phaser.Loader.LoaderPlugin.unityAtlas(atlasURL)": "The absolute or relative URL to load the texture atlas data file from. If undefined or `null` it will be set to `<key>.txt`, i.e. if `key` was \"alien\" then the URL will be \"alien.txt\".",
  "Phaser.Loader.LoaderPlugin.unityAtlas(textureURL)": "The absolute or relative URL to load the texture image file from. If undefined or `null` it will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".",
  "Phaser.Types.Loader.FileTypes.UnityAtlasFileConfig.normalMap": "The filename of an associated normal map. It uses the same path and url to load as the texture image.",
  "Phaser.Loader.LoaderPlugin.video(urls)": "The absolute or relative URL to load the video files from."
}